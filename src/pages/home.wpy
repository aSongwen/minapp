<template>
  <view class="container">
    <swiper class="slider-box" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}">
      <repeat for="{{silderImg}}" key="index" index="index" item="item">
        <block>
          <swiper-item class="slider-item">
            <image src="{{item.img}}" class="slide-image" mode="scaleToFill" />
            <text class="slider-txt">{{item.content}}</text>
          </swiper-item>
        </block>
      </repeat>
    </swiper>
    <view class="vc-article">
      <repeat for="{{vcImg}}" key="item" index="index" item="item">
        <view class="vc" @tap="viewDetails" data-id="{{item.id}}">
          <image src="{{item.src}}" class="vc-image" />
          <view class="vc-tit">
            <text class="vc-text">{{item.text}}</text>
            <view class="vc-describe">{{item.describe}}</view>
            <view class="vc-time">{{time}}</view>
          </view>
        </view>
        <navigator wx:if='{{index===1}}' hover-class="none" url="{{url.article}}">
          <article></article>
        </navigator>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import article from '../components/common/article'
  import {
    connect,
    getStore
  } from 'wepy-redux'
  import {
    asyncHomeSliderImg,
    asyncHomeVcImg
  } from '../store/actions'
  import {
    formatMsgTime
  } from '../utils/format'
  import Request from '../api/home'
  import { DOMParser } from '../utils/xml2json/dom-parser'
  @connect({
    silderImg(state) {
      return state.homePage.sliderImg
    },
    vcImg(state) {
      return state.homePage.vcImg
    }
  })
  export default class extends wepy.page {
    config = {
      navigationBarTitleText: '十分之约'
    }
    data = {
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 2000,
      time: '',
      url: {
        article: './techArticle'
      }
    }
    components = {
      article
    }
    async onLoad() {
      const homeData = await Request.getInfo()
      const xmlParser = new DOMParser()
      const doc = xmlParser.parseFromString(homeData)
      console.log(`doc.getElementsByTagName('item')`, doc.getElementsByTagName('item'))
      console.log(`title`, doc.getElementsByTagName('item')[0].getElementsByTagName('title')[0].childNodes[0].data)
      console.log(`link`, doc.getElementsByTagName('item')[0].getElementsByTagName('link')[0].childNodes[0].data)
      console.log(`pubDate`, doc.getElementsByTagName('item')[0].getElementsByTagName('pubDate')[0].childNodes[0].data)
      console.log(`guid`, doc.getElementsByTagName('item')[0].getElementsByTagName('guid')[0].childNodes[0].data)
      const store = getStore()
      wepy.showLoading({
        title: 'loading...'
      })
      store.dispatch(asyncHomeSliderImg())
      store.dispatch(asyncHomeVcImg())
      Promise.all([store.dispatch(asyncHomeSliderImg()), store.dispatch(asyncHomeVcImg())]).then(() => {
        wepy.hideLoading()
      })
      this.time = formatMsgTime(new Date())
    }
    methods = {
      viewDetails(e) {
        let id = e.currentTarget.dataset.id
        wepy.navigateTo({
          url: `./techArticle?id=${id}`
        })
      }
    }
  }
</script>

<style lang="less">
  .slider-box {
    .slider-item {
      position: relative;
      .slide-image {
        width: 100vw;
        height: 100%;
      }
      .slider-txt {
        color: rgba(255, 255, 255, .5);
        background: rgba(0, 0, 0, .5);
        position: absolute;
        top: 0;
        left: 0;
        width: 100vw;
      }
    }
  }
  .vc-article {
    padding: 30rpx 0;
  }
  .vc {
    display: flex;
    flex-wrap: wrap;
    margin-top: 30rpx;
    padding: 0 30rpx;
    .vc-image {
      width: 300rpx;
      height: 200rpx;
    }
    .vc-tit {
      width: 390rpx;
      height: 200rpx;
      box-sizing: border-box;
      padding-left: 20rpx;
      position: relative;
      .vc-text {
        font-size: 35rpx;
        width: 100%;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
        overflow: hidden;
      }
      .vc-describe {
        width: 100%;
        top: 35rpx;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
        overflow: hidden;
      }
      .vc-time {
        top: 70rpx;
      }
    }
  }
  .vc:nth-child(1) {
    margin-top: 0;
  }
</style>
