<template>
<loginBox></loginBox>
  <startup-popup :show.sync="startupPopupCss" :detail.sync="startupPopupDetail" :dataType.sync="dataType" :btnShow.sync="btnShow">
  </startup-popup>
  <classify :rootcateList.sync="startupCateList" :testData.sync="startupDetailList">
  </classify>
</template>

<script>
  import wepy from 'wepy'
  import { connect, getStore } from 'wepy-redux'
  import { asyncStartupCateList, asyncStartupDetailList } from '../store/actions'
  import classify from '../components/common/classify'
  import loginBox from '../components/common/login-box'
  import popup from '../components/common/popup'
  
  @connect({
    startupDetailList(state) {
      return state.startupPage.startupDetailList
    },
    startupCateList(state) {
      return state.startupPage.startupCateList
    }
  })
  export default class extends wepy.page {
    config = {
      navigationBarTitleText: 'åˆ†ç±»'
    }
    components = {
      classify,
      'startup-popup': popup,
      loginBox
    }
    data = {
      startupPopupCss: 'visibility:hidden;',
      startupPopupDetail: {},
      dataType: 'startupPage',
      btnShow: 'display:block;'
    }
    onLoad() {
      const store = getStore()
      wepy.showLoading({
        title: 'loading...'
      })
      Promise.all([store.dispatch(asyncStartupCateList()), store.dispatch(asyncStartupDetailList())]).then(res => {
        wepy.hideLoading()
        this.$broadcast('EdataCate')
      })
    }
    onShow() {}
    startupDetailById(index) {
      return this.startupDetailList.filter(({id}) => id === index)
    }
    computed = {}
    methods = {}
    events = {
      showDetail(index) {
        this.startupPopupCss = 'visibility:visible;'
        this.btnShow = 'display:block;'
        const startupDetail = this.startupDetailById(index)
        if (startupDetail.length > 0) this.startupPopupDetail = startupDetail[0]
      }
    }
  }
</script>

<style lang="less">
  page {
    background: #f5f5f5;
  }
</style>
