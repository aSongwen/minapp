<template>
  <view>
    <view class="apply-name">{{!role ? '信息注册' : '基本信息'}}</view>
    <repeat for="{{iptName}}" key="item" index="index" item="item">
      <inforeg :iptVal.sync="item.value" :iptName.sync="item.name" :iptId.sync="item.id" :iptType="item.iptType" :engName.sync="item.engName"></inforeg>
    </repeat>
    <view class="apply-name focus">关注领域</view>
    <focusarea :ckbName.sync="ckbName" :value.sync="otherFocusVal"></focusarea>

    <view class="apply-name focus">所在轮次</view>
    <repeat for="{{roundName}}" item="item" index="index" key="key">
      <view class="focus-area">
        <checkbox-group data-id="{{item.id}}" bindchange="isChecked">
          <label>{{item.name}}</label>
          <checkbox class="ckb" color="#FF6A3C" checked="{{item.checked}}"></checkbox>
        </checkbox-group>
      </view>
    </repeat>

    <view class="apply-name focus">产品介绍</view>
    <view class="proIntArea">
      <textarea bindinput="getTextArea" name="proint" id="proInt" cols="30" rows="50" value="{{product_detail}}"></textarea>
    </view>

    <!-- <view class="apply-name focus">上传商业计划</view>
    <fileupload></fileupload> -->

    <view class="submit">
      <button @tap="submit">{{!role ? '确定报名' : '保存'}}</button>
    </view>
    
    <view @tap="perfectInfo" class="mask" wx:if="{{isShow}}"></view>
    <view @tap="perfectInfo" class="valDialog" wx:if="{{isShow}}">
      <repeat for="{{validateCon}}" item="item" index="index" key="item">
        <text class="val-text">{{item}}</text>
      </repeat>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  // import // 引入redux setRole
  import { getStore, connect } from 'wepy-redux'
  // 报名接口返回setRole角色
  import infoReg from '../components/common/infoRegister'
  import focusArea from '../components/common/focusArea'
  import {
    setRole
    // setLoginBoxVisual
  } from '../store/actions/user-info'
  import Request from '../api/startup'
  import fileUpload from '../components/common/fileUpload'
  import handErr from '../utils/handleError'
  @connect({
    userInfo(state) {
      return state.userInfo.detail
    },
    role(state) {
      return state.userInfo.role
    }
  })
  export default class extends wepy.page {
    store = getStore()
    config = {
      navigationBarTitleText: '创业者'
    }
    data = {
      iptName: [
        {
          id: 0,
          name: '公司名称',
          iptType: 'text',
          engName: 'company'
        }, {
          id: 1,
          name: '产品名称',
          iptType: 'text',
          engName: 'product'
        }, {
          id: 2,
          name: '姓名',
          iptType: 'text',
          engName: 'name'
        }, {
          id: 3,
          name: '电话',
          iptType: 'number',
          engName: 'tel'
        }, {
          id: 4,
          name: '邮箱',
          iptType: 'text',
          engName: 'email'
        }, {
          id: 5,
          name: '职位',
          iptType: 'text',
          engName: 'position'
        }
      ],
      ckbName: [
        {
          id: 0,
          name: '人工智能',
          checked: false
        }, {
          id: 1,
          name: '金融行业',
          checked: false
        }, {
          id: 2,
          name: '区块链',
          checked: false
        }, {
          id: 3,
          name: '文化娱乐',
          checked: false
        }, {
          id: 4,
          name: '医药行业',
          checked: false
        }, {
          id: 5,
          name: '高端制造',
          checked: false
        }, {
          id: 6,
          name: '企业服务',
          checked: false
        }, {
          id: 7,
          name: '其他',
          checked: false
        }
      ],
      roundName: [
        {
          id: 0,
          name: '种子轮',
          checked: false
        }, {
          id: 1,
          name: '天使轮',
          checked: false
        }, {
          id: 2,
          name: 'A轮',
          checked: false
        }, {
          id: 3,
          name: 'B轮',
          checked: false
        }, {
          id: 4,
          name: 'C轮',
          checked: false
        }, {
          id: 5,
          name: '不限',
          checked: false
        }
      ],
      isShow: false,
      validateCon: [],
      otherFocusVal: '',
      jsonData: {
        'company': '',
        'product': '',
        'name': '',
        'tel': '',
        'email': '',
        'position': ''
      },
      areaData: [],
      roundData: [],
      product_detail: '',
      isNewData: {
        index: -1,
        data: ''
      }
    }
    components = {
      inforeg: infoReg,
      focusarea: focusArea,
      fileupload: fileUpload
    }
    validateForm() {
      this.validateCon = []
      const regTel = /^[1][3,4,5,7,8,9]\d{9}$/
      const regEmail = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/
      !regTel.test(this.jsonData.tel) && this.validateCon.push('*请输入正确的手机号')
      !regEmail.test(this.jsonData.email) && this.validateCon.push('*请输入正确的邮箱地址')
      Object.values(this.jsonData).some(val => val === '') && this.validateCon.push('*信息请输入完整')
      this.validateCon.length === 0 ? (this.isShow = false) : (this.isShow = true)
    }
    getData(thisArr, saveArr, Bool = false) {
      let _this = this
      console.log(`thisArr`, thisArr)
      thisArr.forEach((val, key, arr) => {
        val.checked && saveArr.push(val.name)
        if (Bool) {
          if (key === arr.length - 1 && _this.otherFocusVal !== '' && val.checked) {
            // saveArr.pop()
            // saveArr.push(_this.otherFocusVal)
            saveArr[saveArr.length - 1] += _this.otherFocusVal
          }
        }
      })
    }
    async onLoad() {
      wepy.showShareMenu({
        withShareTicket: true
      })
      if (!this.role) {
        wepy.showToast({
          title: '输入电话和邮箱可快速匹配',
          icon: 'none',
          duration: 2500
        })
        return
      }
      try {
        wepy.showLoading({
          title: 'loading...'
        })
        const result = await Request.getInfo()
        if (result.code === 20000) {
          this.iptName = this.iptName.map(val => {
            val.value = result.data[val.engName]
            return val
          })
          const focusArea = result.data['focus_area'].split(',')
          let ckbName = []
          this.ckbName = this.ckbName.map(val => {
            ckbName.push(val.name)
            if (focusArea.indexOf(val.name) !== -1) {
              val.checked = true
            }
            return val
          })
          let other = ''
          // 获取其他
          focusArea.map(val => {
            if (ckbName.indexOf(val) === -1) {
              other = val
            }
          })
          if (other !== '') {
            this.ckbName[7].checked = true
            this.otherFocusVal = other.replace('其他', '')
          }
          const roundName = result.data['rounds'].split(',')
          this.roundName = this.roundName.map(val => {
            if (roundName.indexOf(val.name) !== -1) {
              val.checked = true
            }
            return val
          })
          for (let key in this.jsonData) {
            this.jsonData[key] = result.data[key]
          }
          // 获取产品介绍
          this.product_detail = result.data['product_detail']
          wepy.hideLoading()
          this.$apply()
        } else if (result.code === 50001 || result.code === 50002) {
          // wepy.clearStorageSync()
          // 刷新token
          handErr.handErr(result.code)
          wepy.showModal({
            title: '提示',
            content: result.msg,
            showCancel: false
          }).then(res => {
            wepy.reLaunch({ url: 'userInfo' })
          })
        } else {
          wepy.hideLoading()
          handErr.handErr(result.code)
          wepy.showModal({
            title: '提示',
            content: result.msg || '未知错误',
            showCancel: false
          })
        }
      } catch (err) {
        console.log(err)
      }
    }
    methods = {
      isChecked(e) {
        this.roundName[e.target.dataset.id].checked = !this.roundName[e.target.dataset.id].checked
      },
      getTextArea (e) {
        this.product_detail = e.detail.value
      },
      async submit() {
        this.areaData = []
        this.roundData = []
        this.getData(this.ckbName, this.areaData, true)
        this.getData(this.roundName, this.roundData)
        this.validateForm()
        const data = Object.assign({}, this.jsonData, { focusArea: this.areaData }, { rounds: this.roundData }, { product_detail: this.product_detail })
        // await this.store.dispatch(setLoginBoxVisual('visibility:hidden;'))
        console.log(`data`, data)
        if (!this.isShow) {
          try {
            let result
            if (!this.role) {
              result = await Request.apply(data)
            } else {
              result = await Request.update(data)
            }
            this.statusHandle(result)
          } catch (err) {
            wepy.showModal({
              title: '提示',
              content: err,
              showCancel: false
            })
          }
        }
      },
      perfectInfo() {
        this.isShow = false
      }
    }
    statusHandle(result, flag) { // 状态处理
      if (result.code === 20000) {
        // 报名成功后设置
        this.store.dispatch(setRole(2))
        const userInfo = this.userInfo
        userInfo.role = 2
        wepy.setStorage({
          key: 'userInfo',
          data: userInfo
        })
        wepy.showModal({
          title: '提示',
          content: result.msg,
          showCancel: false
        }).then(res => {
          if (!flag) {
            console.log(`用户点击确定`)
            wepy.navigateBack({
              delta: 1
            })
          } else if (flag === 1) {
            this.onLoad()
          }
        })
        // await this.store.dispatch(setLoginBoxVisual('visibility:hidden;'))
      } else if (result.code === 50001 || result.code === 50002) {
        // wepy.clearStorageSync()
        // 刷新token
        handErr.handErr(result.code)
        wepy.showModal({
          title: '提示',
          content: result.msg,
          showCancel: false
        }).then(res => {
          wepy.reLaunch({ url: 'userInfo' })
        })
      } else {
        handErr.handErr(result.code)
        wepy.showModal({
          title: '提示',
          content: result.msg || '未知错误',
          showCancel: false
        })
      }
    }
    events = {
      sendOther(value) {
        this.otherFocusVal = value
      },
      sendInfoVal(value, curIdx, engName) {
        if (this.isNewData.data === value && this.isNewData.index === curIdx) { // 因为触发两次事件条件使判断触发一次
          return
        } else {
          this.isNewData.data = value
          this.isNewData.index = curIdx
        }
        this.iptName.forEach((val) => {
          if (val.id === +curIdx) {
            this.jsonData[engName] = value.trim()
          }
        })
        if ((engName === 'tel' || engName === 'email') && value.trim().length > 5 && !this.role) {
          // 去后台匹配数据
          Request.autoPatch({
            email: this.jsonData['email'],
            tel: this.jsonData['tel']})
            .then(async res => {
              if (res.code === 20000) {
                const btnStatus = await wepy.showModal({
                  title: '认领',
                  content: `匹配到后台公司：\r\n${res.data[0].company}`
                })
                if (btnStatus.confirm) {
                  console.log(`点击确定`)
                  // 电话、邮箱
                  const res = await Request.quickapply({
                    email: this.jsonData['email'],
                    tel: this.jsonData['tel']
                  })
                  this.statusHandle(res, 1)
                }
              }
            })
        }
      }
    }
  }
</script>
<style lang="less">
  @import '../styles/apply';
</style>
