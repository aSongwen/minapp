<template>
  <view>
    <loginBox></loginBox>
    <view>
      <view class="userinfo">
        <image src="{{userInfo.avatarUrl}}" class="userinfo-avatar" />
        <view>{{userInfo.nickName}}</view>
      </view>
      <view class="per-navigation">
        <navigator url="{{role === 1 ? url.vc : url.startup}}">
          <userItem>
            <view slot="personalInfo">个人信息</view>
          </userItem>
        </navigator>
        <repeat for="{{attention}}" key="index" index="index" item="item">
          <navigator url="{{item.list}}">
            <userItem>
              <view slot="personalInfo">{{item.title}}</view>
            </userItem>
          </navigator>
        </repeat>
        <navigator url="{{url.introduced}}">
          <userItem class="border-none">
            <view slot="personalInfo">动点创投介绍</view>
          </userItem>
        </navigator>
      </view>
      <view class="qr-code">
        <image wx:if="{{codeImg}}" class="code-img" src="{{codeImg}}" />
      </view>
      <view class='nav'>
        <button bindtap='scanCode' class="navigator-text">扫码关注对方</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    connect
  } from 'wepy-redux'
  import userItem from '../components/common/userItem'
  import loginBox from '../components/common/login-box'
  import {
    Buffer
  } from 'buffer'
  @connect({
    userInfo(state) {
      return state.userInfo.detail
    },
    codeImg(state) {
      if (state.token.token) {
        const payload = state.token.token.split('.')[1]
        const url = 'https://vcmeetup.technode.com/api/user/code?uid='
        const uid = JSON.parse(Buffer.from(payload, 'base64').toString('ascii')).uid
        return url + uid
      }
      return state.token.token
    },
    role(state) {
      return state.userInfo.role
    }
  })
  export default class extends wepy.page {
    config = {
      navigationBarTitleText: '个人信息'
    }
    data = {
      url: {
        userInfo: '',
        introduced: './vcIntroduced',
        vc: './vcApply',
        startup: './entApply'
      },
      attention: [{
        title: '我的关注',
        list: `./communicated?aid=${0}`
      }, {
        title: '关注我的',
        list: `./communicated?aid=${1}`
      }]
    }
    components = {
      userItem,
      loginBox
    }
    onLoad() {
      wepy.showShareMenu({
        withShareTicket: true
      })
    }
    methods = {
      async scanCode() {
        try {
          const res = await wepy.scanCode({ onlyFromCamera: true })
          console.log(`获取到路径${res.path}`)
          wepy.navigateTo({
            url: res.path.replace('pages/', '')
          })
        } catch (err) {
          wepy.showToast({
            title: '小程序码识别失败',
            icon: 'none',
            duration: 2000
          })
        }
      }
    }
  }
</script>

<style lang="less">
  page {
    background-color: #f5f5f5;
  }
  .userinfo {
    padding: 60rpx 0;
    text-align: center;
    background-color: #fff;
    .userinfo-avatar {
      width: 140rpx;
      height: 140rpx;
      border: 2px solid #fff;
      border-radius: 50%;
      box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
    }
  }
  .per-navigation {
    background-color: #fff;
    margin-top: 20rpx;
    padding: 0 20rpx;
    .border-none {
      border: none;
    }
  }
  .qr-code {
    background-color: #fff;
    width: 100vw;
    margin-top: 20rpx;
    padding: 40rpx 0;
    text-align: center;
    .code-img {
      width: 450rpx;
      height: 450rpx;
    }
  }
  .nav{
    width: 100vw;
    padding: 20rpx;
    padding-bottom: 40px;
    box-sizing: border-box;
    background-color: #fff;
    .navigator-text {
      width: 100%;
      color: #FFFFFF;
      background: #FF6A3C;
    }
  }
</style>
