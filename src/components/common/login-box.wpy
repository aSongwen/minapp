<template>
  <view class="login-wrap" style="{{loginBoxVisual}}">
    <view class="window">
      <view class="title">请选择您的身份</view>
      <button data-role='1' bindgetuserinfo='getUserInfo' open-type='getUserInfo' style="">投资人</button>
      <button data-role='2' bindgetuserinfo='getUserInfo' open-type='getUserInfo' style="border-radius: 0 0 10rpx 10rpx;">创业者</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    connect,
    getStore
  } from 'wepy-redux'
  import {
    setUserInfo
    // setLoginBoxVisual
  } from '../../store/actions/user-info'
  import login from '../../api/login'
  @connect({
    userInfo(state) {
      return state.userInfo.detail
    },
    loginBoxVisual(state) {
      return state.userInfo.loginBoxVisual
    }
  })
  export default class extends wepy.component {
    store = getStore()
    async onLoad() {
      const self = this
      try {
        const user = await wepy.getStorage({
          key: 'userInfo'
        })
        const userInfo = user.data
        await self.store.dispatch(setUserInfo(userInfo))
        // await self.store.dispatch(setLoginBoxVisual('visibility:hidden;'))
      } catch (err) {
        // console.log(err)
      }
    }
    methods = {
      getUserInfo: async(res) => {
        const role = res.currentTarget.dataset.role
        if (res.detail.errMsg === 'getUserInfo:ok') {
          const loginCode = await wepy.login()
          console.log(loginCode)
          await this.store.dispatch(setUserInfo(res.detail.userInfo))
          // await this.store.dispatch(setLoginBoxVisual('visibility:hidden;'))
          wepy.setStorage({
            key: 'userInfo',
            data: res.detail.userInfo
          })
          if (loginCode.code) {
            const code = loginCode.code
            console.log(code)
            try {
              console.log({ ...res.detail.userInfo })
              const result = await login.login(code, { ...res.detail.userInfo })
              console.log(result.data.jwt)
              wepy.setStorage({
                key: 'token',
                data: result.data.jwt
              })
              if (role === '1') {
                wepy.navigateTo({
                  url: `../pages/vcApply`
                })
              } else {
                wepy.navigateTo({
                  url: `../pages/entApply`
                })
              }
            } catch (err) {
              console.log(err)
            }
          } else {
            console.log('登录失败！' + res.errMsg)
          }
        } else {
          this.loginBoxVisual = 'visibility:visible;'
          wepy.showToast({
            title: '微信登录失败,请允许授权!',
            icon: 'none',
            duration: 2000
          })
        }
      }
    }
  }
</script>

<style lang="less">
  .login-wrap {
    visibility: hidden;
    display: flex;
    height: 100%;
    width: 100%;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 1000;
    justify-content: center;
    align-items: center;
    background: rgba(0, 0, 0, 0.5);
    .window {
      min-height: 200rpx;
      width: 500rpx;
      background: #f5f5f5;
      box-sizing: border-box;
      border-radius: 10rpx;
      .title {
        height: 70rpx;
        background-color: #f5f5f5;
        border-radius: 10rpx 10rpx 0 0;
        line-height: 70rpx;
        text-align: center;
        font-size: 35rpx;
        color: #666;
      }
      button {
        color: #666;
      }
    }
  }
</style>
