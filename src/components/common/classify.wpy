<template>
  <view class="classify" style="height:{{windowHeight-25}}px">
    <scroll-view class="classify_catetory" scroll-y scroll-with-animation="true" style="height:100%">
      <repeat for="{{rootcateList}}" key="item" index="index">
        <view class="name {{item.active? 'active':''}}" @tap="changeCate" data-id="{{item.id}}" data-index="{{index}}">
          {{item.name}}
        </view>
      </repeat>
    </scroll-view>
    <scroll-view class="classify_detail"  scroll-with-animation="true" style="height:100%">
      <view class="children">
        <repeat for="{{childcateList}}" key="item" index="index">
          <view hover-class="none" class="children_item" url="" data-index="{{item.id}}" @tap="showDetail">
            <view class="child_name">{{item.name}}</view>
          </view>
        </repeat>
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Classify extends wepy.component {
    data = {
      scrollTop: 100,
      windowHeight: 0,
      childcateList: [],
      statusBarHeight: 0
    }
    props = {
      rootcateList: Array,
      testData: Array
    }
    cateIndex = 0
    onLoad() {
      let systemInfo
      const that = this
      wepy.getStorage({
        key: 'systemInfo',
        success: function(res) {
          systemInfo = res.data
          that.windowHeight = systemInfo.windowHeight - that.statusBarHeight
          that.$apply()
        }
      })
    }
    dataCate(parentId) {
      this.childcateList = this.testData.filter((value) => value.parentId === parentId)
    }
    upStatus(index, newIndex) {
      this.rootcateList[index].active = false
      this.rootcateList[newIndex].active = true
    }
    onShow() {}
    computed = {}
    methods = {
      changeCate(e) {
        const id = e.currentTarget.dataset.id
        const index = e.currentTarget.dataset.index
        this.dataCate(id)
        this.upStatus(this.cateIndex, index)
        this.cateIndex = index
      },
      showDetail(e) {
        const index = e.currentTarget.dataset.index
        this.$emit('showDetail', index)
      }
    }
    events = {
      EdataCate() {
        console.log(`触发EdataCate`)
        if (this.rootcateList.length > 0) {
          this.dataCate(this.rootcateList[0].id)
        } else {
          console.log(this.rootcateList.length)
        }
      }
    }
  }
</script>

<style lang="less">
  .search_read_only .search_content {
    width: 100%;
  }
  .classify {
    display: flex;
    position: relative;
    .classify_catetory {
      width: 200rpx;
      position: relative;
      z-index: 1;
      .name {
        text-align: center;
        height: 100rpx;
        line-height: 100rpx;
        font-size: 28rpx;
        color: #666;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
      .active {
        border-left: 6rpx solid #ff6a3c;
        background: #fff;
        color: #ff6a3c;
      }
    }
    .classify_detail {
      position: relative;
      z-index: 999; // margin-left: -15rpx;
      background: #fff;
      padding: 15px 10px 10px 30px;
      .classify_item {}
      .title {
        font-size: 30rpx;
        color: #333;
        margin-left: 25rpx;
      }
      .children {
        display: flex;
        flex-wrap: wrap;
        margin: 20rpx 0rpx;
      }
      .child_image {
        width: 60px;
        height: 60px;
      }
      .child_name {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 170rpx;
        color: #666;
      }
      .children_item {
        width: 170rpx;
        text-align: center;
        margin-top:20rpx;
      }
    }
  }
</style>
